version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka-1:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    volumes:
      - kafka-data-1:/var/lib/kafka/data
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-2:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    volumes:
      - kafka-data-2:/var/lib/kafka/data
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-3:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    volumes:
      - kafka-data-3:/var/lib/kafka/data
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8089:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-3:9092, PLAINTEXT://kafka-2:9092,PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - kafka-network

  # Flink job manager and task manager
  jobmanager:
    image: flink:1.17.2-scala_2.12-java11
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./data:/data
    networks:
      - kafka-network
      - db-network

  taskmanager-1:
    image: flink:1.17.2-scala_2.12-java11
    expose:
      - "6121"  # TaskManager RPC port
      - "6122"  # TaskManager data port
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./data:/data
    depends_on:
      - jobmanager
    networks:
      - kafka-network
      - db-network

  taskmanager-2:
    image: flink:1.17.2-scala_2.12-java11
    expose:
      - "6121"  # TaskManager RPC port
      - "6122"  # TaskManager data port
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    depends_on:
      - jobmanager
    volumes:
      - ./data:/data
    networks:
      - kafka-network
      - db-network

  taskmanager-3:
    image: flink:1.17.2-scala_2.12-java11
    expose:
      - "6121"  # TaskManager RPC port
      - "6122"  # TaskManager data port
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./data:/data
    depends_on:
      - jobmanager
    networks:
      - kafka-network
      - db-network

  producer:
    image: transactions-producer
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
    networks:
        - kafka-network
    environment:
      BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081


  scylla-node1:
    container_name: scylla-node1
    image: scylladb/scylla:5.1.0
    restart: always
    ports:
      - "7000:7000"
      - "9042:9042"
    volumes:
      - ./scripts:/scripts
    networks:
      db-network:
#
networks:
  kafka-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  kafka-data-1:
    driver: local
  kafka-data-2:
    driver: local
  kafka-data-3:
    driver: local
  minio-1:
    driver: local